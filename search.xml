<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>First Blog</title>
    <url>/2022/11/26/First-Blog/</url>
    <content><![CDATA[<h2 id="一、-MP的学习"><a href="#一、-MP的学习" class="headerlink" title="一、 MP的学习"></a>一、 MP的学习</h2><h3 id="1、导入依赖"><a href="#1、导入依赖" class="headerlink" title="1、导入依赖"></a>1、导入依赖</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="2、MP生成日志"><a href="#2、MP生成日志" class="headerlink" title="2、MP生成日志"></a>2、MP生成日志</h3><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">global-config:</span></span><br><span class="line">    <span class="attr">db-config:</span></span><br><span class="line">      <span class="attr">id-type:</span> <span class="string">auto</span> <span class="string">//id设置为自增，默认是雪花算法生成的id</span></span><br><span class="line">      <span class="attr">table-prefix:</span> <span class="string">sys_//数据库表的前缀</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl//控制台输出</span></span><br></pre></td></tr></table></figure>
<h3 id="3、MP的分页配置类"><a href="#3、MP的分页配置类" class="headerlink" title="3、MP的分页配置类"></a>3、MP的分页配置类</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MPconfig</span> &#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> MybatisPlusInterceptor <span class="title function_">mybatisPlusInterceptor</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">MybatisPlusInterceptor</span> <span class="variable">mybatisPlusInterceptor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MybatisPlusInterceptor</span>();<span class="comment">//拦截器</span></span><br><span class="line">        mybatisPlusInterceptor.addInnerInterceptor(<span class="keyword">new</span> <span class="title class_">PaginationInnerInterceptor</span>());<span class="comment">//分页拦截器</span></span><br><span class="line">        <span class="keyword">return</span>  mybatisPlusInterceptor;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>后端学习</category>
      </categories>
      <tags>
        <tag>springboot整合mybatis的学习</tag>
      </tags>
  </entry>
  <entry>
    <title>java send email</title>
    <url>/2022/11/28/java-send-email/</url>
    <content><![CDATA[<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span>  <span class="keyword">void</span> <span class="title function_">qqmailtest</span><span class="params">()</span>   &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            testMail(<span class="string">&quot;破竹&quot;</span>,<span class="string">&quot;你好&quot;</span>,<span class="string">&quot;761229038@qq.com&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span>  <span class="keyword">void</span> <span class="title function_">testMail</span> <span class="params">(String topic,String msg,String sendto)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">// 给用户发送邮件的邮箱</span></span><br><span class="line">        <span class="keyword">final</span> <span class="type">String</span> <span class="variable">from</span> <span class="operator">=</span> <span class="string">&quot;3036354190@qq.com&quot;</span>;</span><br><span class="line">        <span class="comment">// 邮箱的用户名</span></span><br><span class="line">        <span class="keyword">final</span> <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> <span class="string">&quot;3036354190@qq.com&quot;</span>;</span><br><span class="line">        <span class="comment">// 邮箱授权码，刚刚保存的授权码，不是qq密码</span></span><br><span class="line">        <span class="keyword">final</span> <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;aczwsvvgafjmddic&quot;</span>;</span><br><span class="line">        <span class="comment">// 发送邮件的服务器地址，QQ服务器</span></span><br><span class="line">        <span class="keyword">final</span> <span class="type">String</span> <span class="variable">host</span> <span class="operator">=</span> <span class="string">&quot;smtp.qq.com&quot;</span>;</span><br><span class="line">        <span class="comment">// 接收人邮箱</span></span><br><span class="line">        <span class="keyword">final</span> <span class="type">String</span> <span class="variable">to</span> <span class="operator">=</span>  sendto;</span><br><span class="line">        <span class="comment">// 邮件主题</span></span><br><span class="line">        <span class="keyword">final</span> <span class="type">String</span> <span class="variable">title</span> <span class="operator">=</span> topic;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 使用QQ邮箱时配置</span></span><br><span class="line">        <span class="type">Properties</span> <span class="variable">prop</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">        prop.setProperty(<span class="string">&quot;mail.host&quot;</span>, <span class="string">&quot;smtp.qq.com&quot;</span>);    <span class="comment">// 设置QQ邮件服务器</span></span><br><span class="line">        prop.setProperty(<span class="string">&quot;mail.transport.protocol&quot;</span>, <span class="string">&quot;smtp&quot;</span>);      <span class="comment">// 邮件发送协议</span></span><br><span class="line">        prop.setProperty(<span class="string">&quot;mail.smtp.auth&quot;</span>, <span class="string">&quot;true&quot;</span>);      <span class="comment">// 需要验证用户名和密码</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 关于QQ邮箱，还要设置SSL加密，其他邮箱不需要  可删减</span></span><br><span class="line"><span class="comment">//            MailSSLSocketFactory sf = new MailSSLSocketFactory();</span></span><br><span class="line"><span class="comment">//            sf.setTrustAllHosts(true);</span></span><br><span class="line"><span class="comment">//            prop.put(&quot;mail.smtp.ssl.enable&quot;, &quot;true&quot;);</span></span><br><span class="line"><span class="comment">//            prop.put(&quot;mail.smtp.ssl.socketFactory&quot;, sf);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建定义整个邮件程序所需的环境信息的 Session 对象，QQ才有，其他邮箱就不用了</span></span><br><span class="line">        <span class="type">Session</span> <span class="variable">session</span> <span class="operator">=</span> Session.getDefaultInstance(prop, <span class="keyword">new</span> <span class="title class_">Authenticator</span>() &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">protected</span> PasswordAuthentication <span class="title function_">getPasswordAuthentication</span><span class="params">()</span> &#123;</span><br><span class="line">                <span class="comment">// 发件人邮箱用户名，授权码</span></span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">PasswordAuthentication</span>(username, password);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 开启 Session 的 debug 模式，这样就可以查看程序发送 Email 的运行状态</span></span><br><span class="line">        session.setDebug(<span class="literal">false</span>);  <span class="comment">//开发时打卡， 发布关闭</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 通过 session 得到 transport 对象</span></span><br><span class="line">        <span class="type">Transport</span> <span class="variable">ts</span> <span class="operator">=</span> session.getTransport();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 使用邮箱的用户名和授权码连上邮箱服务器</span></span><br><span class="line">        ts.connect(host, username, password);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建邮件，写邮件</span></span><br><span class="line">        <span class="type">MimeMessage</span> <span class="variable">message</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MimeMessage</span>(session);</span><br><span class="line">        message.setFrom(<span class="keyword">new</span> <span class="title class_">InternetAddress</span>(from)); <span class="comment">// 指明邮件的发件人</span></span><br><span class="line">        message.setRecipient(Message.RecipientType.TO, <span class="keyword">new</span> <span class="title class_">InternetAddress</span>(to));   <span class="comment">// 指明邮件的收件人</span></span><br><span class="line">        message.setSubject(title);     <span class="comment">// 邮件主题</span></span><br><span class="line">        message.setContent(msg, <span class="string">&quot;text/html;charset=utf-8&quot;</span>);    <span class="comment">// 邮件内容</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 发送邮件</span></span><br><span class="line">        ts.sendMessage(message, message.getAllRecipients());</span><br><span class="line">        System.out.println(<span class="string">&quot;验证码发送成功&quot;</span>);</span><br><span class="line">        <span class="comment">// 释放资源</span></span><br><span class="line">        ts.close();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>转载博客： <a href="https://blog.csdn.net/weixin_57869541/article/details/127066438">https://blog.csdn.net/weixin_57869541/article/details/127066438</a></p>
<p>可以通过java实现发送qq邮箱。</p>
]]></content>
      <categories>
        <category>后端学习</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>git的使用和基本命令</title>
    <url>/2023/06/03/git%E7%9A%84%E5%AD%A6%E4%B9%A0%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h1 id="git的使用和基本命令"><a href="#git的使用和基本命令" class="headerlink" title="git的使用和基本命令"></a>git的使用和基本命令</h1><h2 id="创建一个新仓库，在本地控制台上传这些命令"><a href="#创建一个新仓库，在本地控制台上传这些命令" class="headerlink" title="创建一个新仓库，在本地控制台上传这些命令"></a>创建一个新仓库，在本地控制台上传这些命令</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git init</span><br><span class="line">git add .</span><br><span class="line">git commit -m &quot;注释&quot;</span><br><span class="line">git branch -M main </span><br><span class="line">git remote add origin (https://github.com/zwxl/Javaswing-LibrarySystem.git)远程仓库链接</span><br><span class="line">git push -u origin main</span><br></pre></td></tr></table></figure>
<h2 id="在一个已有的仓库上，上传命令"><a href="#在一个已有的仓库上，上传命令" class="headerlink" title="在一个已有的仓库上，上传命令"></a>在一个已有的仓库上，上传命令</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git remote add origin (https://github.com/zwxl/Javaswing-LibrarySystem.git)远程仓库链接</span><br><span class="line">git branch -M main</span><br><span class="line">git push -u origin main</span><br></pre></td></tr></table></figure>
<h2 id="新建分支"><a href="#新建分支" class="headerlink" title="新建分支"></a>新建分支</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git branch name</span><br><span class="line">git checkout name</span><br><span class="line">git add .</span><br><span class="line">git commit -m &quot;注释&quot;</span><br><span class="line">git push -u origin name</span><br></pre></td></tr></table></figure>
<p><strong>上传错误</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">error: remote origin already exists.</span><br></pre></td></tr></table></figure>
<blockquote>
<p>解决方法：</p>
<p>​    git remote -v：查看远程仓库</p>
<p>此时已经关联了仓库，把关联的这个仓库删掉，</p>
<p>​    git remote rm origin (删除已关联仓库)</p>
</blockquote>
<h2 id="git命令"><a href="#git命令" class="headerlink" title="git命令"></a>git命令</h2><h4 id="基本指令"><a href="#基本指令" class="headerlink" title="基本指令"></a>基本指令</h4><ul>
<li><strong>git init</strong> :用来初始化一个git仓库。</li>
<li><strong>git add</strong>: 添加文件到本地缓存(暂存区)。（<strong>git add .</strong> 是将该目录下的所有文件加入缓存区; <strong>git add *.java</strong>: 选择后缀文件添加）</li>
<li><strong>git commit</strong>: 将暂存区内容添加到本地仓库中。</li>
<li><strong>git config</strong>:提交代码到远程仓库配置用户名和密码。</li>
</ul>
<blockquote>
<p>git config —global user.name ‘你的用户名’ </p>
<p>git config —global user.email ‘你的邮箱’</p>
</blockquote>
<ul>
<li><strong>git clone</strong>:远程克隆一个仓库。</li>
<li><strong>git rm</strong>：删除命令。</li>
</ul>
<h4 id="Git的分支管理"><a href="#Git的分支管理" class="headerlink" title="Git的分支管理"></a>Git的分支管理</h4><ul>
<li><strong>git branch</strong>:查看分支命令。</li>
<li><strong>git branch</strong> <strong>分支名字</strong>：创建分支命令。</li>
<li><strong>git checkout 分支名字</strong>：切换分支命令。</li>
<li><strong>git merge</strong>:合并分支。</li>
<li><strong>git branch -d (分支名字)</strong>：删除分支命令</li>
</ul>
<h4 id="Git-远程仓库"><a href="#Git-远程仓库" class="headerlink" title="Git 远程仓库"></a>Git 远程仓库</h4><ul>
<li><strong>git remote add</strong>:Git 远程仓库。</li>
<li><strong>git remote</strong>：查看当前的远程仓库。</li>
<li><strong>git push</strong>：推送到远程仓库。</li>
<li><strong>git remote rm</strong>：删除远程仓库。</li>
<li><strong>git pull</strong>:拉取远程仓库文件（前提是文件中有.git）</li>
</ul>
<h4 id="git实现版本回归"><a href="#git实现版本回归" class="headerlink" title="git实现版本回归"></a>git实现<strong>版本</strong>回归</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">commit (4574c243631961ee0e44c51bdb63def3a6957d66) 版本号(HEAD -&gt; main, origin/main)</span><br><span class="line">Author: 3036354190 &lt;3036354190@qq.com&gt;</span><br><span class="line">Date:   Fri Jun 2 10:36:40 2023 +0800</span><br><span class="line"></span><br><span class="line">    Java开发的秒杀系统</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><strong>git log</strong>:  查看日志</p>
<p><strong>git reset — hard 版本号</strong>:  跳转版本号。</p>
]]></content>
      <categories>
        <category>工具使用</category>
      </categories>
      <tags>
        <tag>git 分布式 版本管理工具</tag>
      </tags>
  </entry>
  <entry>
    <title>前端的学习</title>
    <url>/2023/04/16/%E5%89%8D%E7%AB%AF%E7%9A%84%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h2 id="前端学习"><a href="#前端学习" class="headerlink" title="前端学习"></a>前端学习</h2><h3 id="JQuery的后代选择器"><a href="#JQuery的后代选择器" class="headerlink" title="JQuery的后代选择器"></a><strong>JQuery的后代选择器</strong></h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//后代（包括儿子，孙子，重孙子）</span></span><br><span class="line"></span><br><span class="line">​    <span class="comment">// $(function () &#123;</span></span><br><span class="line"></span><br><span class="line">​    <span class="comment">//   $(&quot;#father p&quot;).css(&quot;color&quot;,&quot;blue&quot;)</span></span><br><span class="line"></span><br><span class="line">​    <span class="comment">// &#125;)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">​    <span class="comment">//子代（儿子）</span></span><br><span class="line"></span><br><span class="line">​    <span class="comment">// $(function()&#123;</span></span><br><span class="line"></span><br><span class="line">​    <span class="comment">//   $(&quot;#child&gt;p&quot;).css(&quot;color&quot;,&quot;blue&quot;)</span></span><br><span class="line"></span><br><span class="line">​    <span class="comment">// &#125;)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">​    <span class="comment">//同代节点(能够选择指定元素后面的所有兄弟元素，不包括自身)</span></span><br><span class="line"></span><br><span class="line">​    <span class="comment">// $(function()&#123;</span></span><br><span class="line"></span><br><span class="line">​    <span class="comment">//   $(&quot;#n~p&quot;).css(&quot;color&quot;,&quot;blue&quot;)</span></span><br><span class="line"></span><br><span class="line">​    <span class="comment">// &#125;)</span></span><br><span class="line"></span><br><span class="line">​    </span><br><span class="line"></span><br><span class="line">​    <span class="comment">//相邻选择器</span></span><br><span class="line"></span><br><span class="line">​    <span class="comment">// 在前面我们讲的 $(&quot;#child~p&quot;) 可以选择指定元素后面的所有兄弟 p 元素，而相邻选择器只能选到指定元素的邻居兄弟元素。</span></span><br><span class="line"></span><br><span class="line">​    <span class="comment">// $(&quot;M+N&quot;); 选择下一个兄弟节点 N</span></span><br><span class="line"></span><br><span class="line">​    $(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"></span><br><span class="line">​      $(<span class="string">&quot;#child+p&quot;</span>).<span class="title function_">css</span>(<span class="string">&quot;color&quot;</span>,<span class="string">&quot;blue&quot;</span>)</span><br><span class="line"></span><br><span class="line">​    &#125;)</span><br></pre></td></tr></table></figure>
<h3 id="综合小练习，多级炫酷菜单渲染"><a href="#综合小练习，多级炫酷菜单渲染" class="headerlink" title="综合小练习，多级炫酷菜单渲染"></a>综合小练习，多级炫酷菜单渲染</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">该练习综合了数组渲染、对象渲染，v-if、v-show、key 事件方法等知识。</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>syl-vue-test<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      * &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-tag">ul</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">list-style</span>: none;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-tag">nav</span>,</span></span><br><span class="line"><span class="language-css">      <span class="selector-tag">ul</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">display</span>: flex; <span class="comment">/* 开启弹性盒模型 布局方式*/</span></span></span><br><span class="line"><span class="language-css">        <span class="attribute">flex-direction</span>: row;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">justify-content</span>: center;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background</span>: yellowgreen;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-tag">nav</span> &gt; <span class="selector-tag">ul</span> &gt; <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">20%</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">line-height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-tag">nav</span> &gt; <span class="selector-tag">ul</span> &gt; <span class="selector-tag">li</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">box-shadow</span>: <span class="number">1px</span> <span class="number">0px</span> <span class="number">10px</span> <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-tag">nav</span> &gt; <span class="selector-tag">ul</span> &gt; <span class="selector-tag">li</span> &gt; <span class="selector-tag">ul</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">flex-direction</span>: column;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-tag">nav</span> &gt; <span class="selector-tag">ul</span> &gt; <span class="selector-tag">li</span> &gt; <span class="selector-tag">ul</span> &gt; <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">box-shadow</span>: <span class="number">1px</span> <span class="number">0px</span> <span class="number">10px</span> <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-tag">nav</span> &gt; <span class="selector-tag">ul</span> &gt; <span class="selector-tag">li</span> &gt; <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">text-transform</span>: uppercase;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入 vue.js --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;vue.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">nav</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">          <span class="comment">&lt;!-- 循环渲染一级菜单 --&gt;</span></span><br><span class="line">          <span class="comment">&lt;!-- 鼠标移入触发 currentIndex(index) 函数，更正 current 是当前菜单的 index，鼠标移出重置 current 为空，事件回调方法在 methods 中实现--&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span></span></span><br><span class="line"><span class="tag">            <span class="attr">v-for</span>=<span class="string">&quot;(nav,index) in navbar&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span></span></span><br><span class="line"><span class="tag">            @<span class="attr">mouseover</span>=<span class="string">&quot;currentIndex(index)&quot;</span></span></span><br><span class="line"><span class="tag">            @<span class="attr">mouseout</span>=<span class="string">&quot;changeIndex&quot;</span></span></span><br><span class="line"><span class="tag">          &gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- nav.name 一级菜单名字 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>&#123;&#123;nav.name&#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 如果 nav.child 存在，说明有子菜单，再次循环渲染子菜单 --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 子菜单 v-show  如果当前菜单的 index 等于 鼠标移入那个菜单的下标我们就展示出子菜单--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">v-if</span>=<span class="string">&quot;nav.child&quot;</span> <span class="attr">v-show</span>=<span class="string">&quot;current===index&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;item in nav.child&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">var</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// navbar 模拟后台获取到的菜单列表</span></span></span><br><span class="line"><span class="language-javascript">          <span class="attr">navbar</span>: [</span></span><br><span class="line"><span class="language-javascript">            &#123;</span></span><br><span class="line"><span class="language-javascript">              <span class="attr">name</span>: <span class="string">&quot;home&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">              <span class="attr">child</span>: [<span class="string">&quot;homeItem&quot;</span>, <span class="string">&quot;homeItem&quot;</span>],</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            &#123;</span></span><br><span class="line"><span class="language-javascript">              <span class="attr">name</span>: <span class="string">&quot;contact&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">              <span class="attr">child</span>: [<span class="string">&quot;contactItem&quot;</span>, <span class="string">&quot;contactItem&quot;</span>],</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            &#123;</span></span><br><span class="line"><span class="language-javascript">              <span class="attr">name</span>: <span class="string">&quot;about&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">          ],</span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// current 当前鼠标在那个菜单上，初始时没有值</span></span></span><br><span class="line"><span class="language-javascript">          <span class="attr">current</span>: <span class="literal">null</span>,</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// 更正 当前鼠标移入的是哪个菜单的 index</span></span></span><br><span class="line"><span class="language-javascript">          <span class="attr">currentIndex</span>: <span class="keyword">function</span> (<span class="params">index</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">this</span>.<span class="property">current</span> = index;</span></span><br><span class="line"><span class="language-javascript">          &#125;,</span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// 鼠标移出 重置 current 值</span></span></span><br><span class="line"><span class="language-javascript">          <span class="attr">changeIndex</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">this</span>.<span class="property">current</span> = <span class="literal">null</span>;</span></span><br><span class="line"><span class="language-javascript">          &#125;,</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">      &#125;);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="JS的学习"><a href="#JS的学习" class="headerlink" title="JS的学习"></a>JS的学习</h3><h4 id="对象的学习"><a href="#对象的学习" class="headerlink" title="对象的学习"></a>对象的学习</h4><p><strong>对象的创建</strong></p>
<figure class="highlight plaintext"><figcaption><span>obj </span></figcaption><table><tr><td class="code"><pre><span class="line">var obj = &#123;&#125;</span><br></pre></td></tr></table></figure>
<p><strong>对象的操作</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> 第一种方式：</span><br><span class="line">   //增加</span><br><span class="line">    var obj = &#123;&#125;</span><br><span class="line">    obj.name = &quot;zwx&quot;;</span><br><span class="line">    obj.age = 20;</span><br><span class="line">    //修改</span><br><span class="line">    obj.name = &quot;张伟雄&quot;;</span><br><span class="line">    //查找</span><br><span class="line">    console.log(obj.name)</span><br><span class="line">    //删除</span><br><span class="line">    delete obj.name;</span><br><span class="line">第二种方式：</span><br><span class="line">	//增加</span><br><span class="line">    var obj = &#123;&#125;</span><br><span class="line">    obj[&quot;name&quot;] = &quot;zwx&quot; 等价于 var obj = &#123;name:&quot;zwx&quot;&#125; 需要加上双引号。</span><br></pre></td></tr></table></figure>
<p><strong>对象的遍历</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">           <span class="attr">name</span>:<span class="string">&quot;zwx&quot;</span>,</span><br><span class="line">           <span class="attr">age</span>:<span class="number">21</span>,</span><br><span class="line">           <span class="attr">sex</span>:<span class="string">&quot;男&quot;</span></span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">let</span> key <span class="keyword">in</span> obj)&#123;</span><br><span class="line">           <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;key: &quot;</span>,key);</span><br><span class="line">           <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;value: &quot;</span>,obj[key]);</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure>
<h4 id="数组的学习"><a href="#数组的学习" class="headerlink" title="数组的学习"></a>数组的学习</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">7</span>,<span class="number">56</span>,<span class="number">6</span>,<span class="number">52</span>]</span><br><span class="line"><span class="comment">//1、增加</span></span><br><span class="line"><span class="comment">// arr.push(100);</span></span><br><span class="line"><span class="comment">// //2、删除</span></span><br><span class="line"><span class="comment">// arr.pop()</span></span><br><span class="line"><span class="comment">//3、头部增加数据</span></span><br><span class="line"><span class="comment">// arr.unshift(1000)</span></span><br><span class="line"><span class="comment">//4、splice</span></span><br><span class="line"><span class="comment">// arr.splice(0,3,&quot;ko&quot;)</span></span><br><span class="line"><span class="comment">// let arr1 = arr.slice(0,1)</span></span><br><span class="line"><span class="comment">// arr1 = arr.concat(12)</span></span><br><span class="line"><span class="keyword">let</span> index = arr.<span class="title function_">indexOf</span>(<span class="number">56</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(index);</span><br><span class="line"></span><br><span class="line"><span class="comment">//数组的遍历</span></span><br><span class="line">第一种方法</span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">7</span>,<span class="number">56</span>,<span class="number">6</span>,<span class="number">52</span>]</span><br><span class="line">        arr.<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">item,index</span>)&#123;</span><br><span class="line">           <span class="variable language_">console</span>.<span class="title function_">log</span>(item,index)</span><br><span class="line">&#125;)</span><br><span class="line">第二种方法</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;arr.<span class="property">length</span>;i++)&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">数组常用方法：</span><br><span class="line">        <span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">7</span>,<span class="number">56</span>,<span class="number">6</span>,<span class="number">52</span>]</span><br><span class="line">        <span class="comment">// arr.forEach(function(item)&#123;</span></span><br><span class="line">        <span class="comment">//     return item*2</span></span><br><span class="line">        <span class="comment">// &#125;)</span></span><br><span class="line">        <span class="comment">//map映射</span></span><br><span class="line">        <span class="keyword">let</span> arr1 = arr.<span class="title function_">map</span>(<span class="keyword">function</span>(<span class="params">item</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&lt;li&gt;&quot;</span>+item+<span class="string">&quot;&lt;/li&gt;&quot;</span>;</span><br><span class="line">            pp1.<span class="property">innerHTML</span> = <span class="string">&quot;&lt;p&gt;55&lt;/p&gt;&quot;</span></span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="comment">//forEach循环 累加，过滤，</span></span><br><span class="line">        <span class="keyword">let</span> total = <span class="number">0</span></span><br><span class="line">        arr.<span class="title function_">forEach</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">           total += item</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(total);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> newArr = []</span><br><span class="line">        arr.<span class="title function_">forEach</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(item&gt;<span class="number">10</span>)&#123;</span><br><span class="line">                newArr.<span class="title function_">push</span>(item)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">let</span> newArr1 = arr.<span class="title function_">filter</span>(<span class="function"><span class="params">item</span>=&gt;</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> item&gt;<span class="number">10</span></span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">let</span> newArr2 = arr.<span class="title function_">map</span>(<span class="function"><span class="params">item</span>=&gt;</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> item&gt;<span class="number">10</span></span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(newArr,newArr1,newArr2);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> arr2 = arr.<span class="title function_">findIndex</span>(<span class="function"><span class="params">item</span>=&gt;</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> item == <span class="number">56</span></span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(arr2);</span><br></pre></td></tr></table></figure>
<p><strong>数组的排序</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//return a-b是从小到大排序</span><br><span class="line">//return b-a是从大到小排序</span><br><span class="line">arr.sort(function(a,b)&#123;</span><br><span class="line">    return a-b</span><br><span class="line">&#125;)</span><br><span class="line">console.log(arr);</span><br></pre></td></tr></table></figure>
<p><strong>数组的去重</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">第一种方法：使用indexOf获取新数组中是否有</span><br><span class="line">let newArr = []</span><br><span class="line">for(let i=0;i&lt;arr.length;i++)&#123;</span><br><span class="line">    if(newArr.indexOf(arr[i])==-1)&#123;</span><br><span class="line">        newArr.push(arr[i])</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">第二种方法：利用对象</span><br><span class="line">let obj = &#123;&#125;</span><br><span class="line">let newArr2 = []</span><br><span class="line">for(let i=0;i&lt;arr.length;i++)&#123;</span><br><span class="line">    obj[arr[i]] = 0</span><br><span class="line">&#125;</span><br><span class="line">for(let key in obj)&#123;</span><br><span class="line">    newArr2.push(key-0)//减0是为了让字符变成整型</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">第三种方法：new Set(ES6语法)</span><br><span class="line">let set1 = new Set(arr)</span><br><span class="line">let newArr3 = Array.from(set1)</span><br></pre></td></tr></table></figure>
<h4 id="字符串的学习"><a href="#字符串的学习" class="headerlink" title="字符串的学习"></a>字符串的学习</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> //字符统计</span><br><span class="line"> let str = &quot;abcabcad&quot;;</span><br><span class="line">        let obj = &#123;&#125;</span><br><span class="line">        for(let i=0;i&lt;str.length;i++)&#123;</span><br><span class="line">            let key = str[i]</span><br><span class="line">            if(obj[key] == undefined)&#123;</span><br><span class="line">                obj[key] = 1;</span><br><span class="line">            &#125;else&#123;</span><br><span class="line">                obj[key]++</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        console.log(obj);</span><br><span class="line">//模糊查询</span><br><span class="line">        let input = prompt(&quot;请输入值：&quot;)</span><br><span class="line">        let str1 = [&quot;aaa&quot;,&quot;abx&quot;,&quot;bjh&quot;,&quot;lk&quot;]</span><br><span class="line">        let str2 = str1.filter(item=&gt;&#123;</span><br><span class="line">            return item.indexOf(input)&gt;-1</span><br><span class="line">        &#125;)</span><br><span class="line">        console.log(str2);</span><br></pre></td></tr></table></figure>
<h4 id="正则表达式的学习"><a href="#正则表达式的学习" class="headerlink" title="正则表达式的学习"></a>正则表达式的学习</h4><p>1、基本语法</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">  <span class="comment">// /\d/一个数字 /\d\d/两个数字</span></span><br><span class="line">      <span class="comment">// var reg = /\d/;</span></span><br><span class="line">      <span class="comment">// console.log(reg.test(&quot;abc&quot;));</span></span><br><span class="line">      <span class="comment">// console.log(reg.test(&quot;12l&quot;));</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// /\D/一个非数字 /\D\D/两个非数字</span></span><br><span class="line">      <span class="comment">// var reg = /\D/;</span></span><br><span class="line">      <span class="comment">// console.log(reg.test(&quot;abc&quot;));</span></span><br><span class="line">      <span class="comment">// console.log(reg.test(&quot;12l&quot;));</span></span><br><span class="line">      <span class="comment">// console.log(reg.test(&quot;1&quot;));</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// /\s/一位空白 (空白 缩进 换行)</span></span><br><span class="line">      <span class="comment">// var reg = /\s/;</span></span><br><span class="line">      <span class="comment">// console.log(reg.test(&quot;a bc&quot;));</span></span><br><span class="line">      <span class="comment">// console.log(reg.test(&quot;abc&quot;));</span></span><br><span class="line">      <span class="comment">// console.log(reg.test(&quot;12l&quot;));</span></span><br><span class="line">      <span class="comment">// console.log(reg.test(&quot;1&quot;));</span></span><br><span class="line"></span><br><span class="line">      </span><br><span class="line">      <span class="comment">// /\s/一位非空白 (空白 缩进 换行)</span></span><br><span class="line">      <span class="comment">// var reg = /\S/;</span></span><br><span class="line">      <span class="comment">// console.log(reg.test(&quot;  &quot;));</span></span><br><span class="line">      <span class="comment">// console.log(reg.test(&quot;abc&quot;));</span></span><br><span class="line">      <span class="comment">// console.log(reg.test(&quot;12l&quot;));</span></span><br><span class="line">      <span class="comment">// console.log(reg.test(&quot;1&quot;));</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">//   // /\w/字母 数字 下划线 </span></span><br><span class="line">      <span class="comment">// var reg = /\w\w/;</span></span><br><span class="line">      <span class="comment">// console.log(reg.test(&quot;￥%&quot;));</span></span><br><span class="line">      <span class="comment">// console.log(reg.test(&quot;abc&quot;));</span></span><br><span class="line">      <span class="comment">// console.log(reg.test(&quot;12l&quot;));</span></span><br><span class="line">      <span class="comment">// console.log(reg.test(&quot;1_&quot;));</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// /\W/非字母数字下划线 </span></span><br><span class="line">      <span class="comment">// var reg = /\W/;</span></span><br><span class="line">      <span class="comment">// console.log(reg.test(&quot;￥%&quot;));</span></span><br><span class="line">      <span class="comment">// console.log(reg.test(&quot;abc&quot;));</span></span><br><span class="line">      <span class="comment">// console.log(reg.test(&quot;12l&quot;));</span></span><br><span class="line">      <span class="comment">// console.log(reg.test(&quot;1_&quot;));</span></span><br><span class="line"></span><br><span class="line">       <span class="comment">// .任意内容（换行不算）</span></span><br><span class="line">       <span class="keyword">var</span> reg =<span class="regexp">/./</span></span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&quot;￥#$%^&amp;*(%&quot;</span>));</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&quot;\n&quot;</span>));</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&quot;12l&quot;</span>));</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&quot;1_&quot;</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//边界符</span></span><br><span class="line">      <span class="comment">//^开始</span></span><br><span class="line">      <span class="comment">//结尾$</span></span><br><span class="line">      <span class="comment">// var reg = /^\d$/</span></span><br><span class="line">      <span class="comment">// console.log(reg.test(&quot;dasf1&quot;));</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//限定符 限制重复次数</span></span><br><span class="line">      <span class="comment">// * 代表重复0~多次</span></span><br><span class="line">      <span class="keyword">var</span> reg = <span class="regexp">/\d*/</span></span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&quot;aaaf&quot;</span>));</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&quot;222vvsdaaaf&quot;</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="comment">// + 代表重复1~多次</span></span><br><span class="line">      <span class="comment">//  var reg = /\d\d+/</span></span><br><span class="line">      <span class="comment">// console.log(reg.test(&quot;1aaaf&quot;));</span></span><br><span class="line">      <span class="comment">// console.log(reg.test(&quot;222vvsdaaaf&quot;));</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// ? 代表重复0~1</span></span><br><span class="line">      <span class="comment">// var reg = /\d?/</span></span><br><span class="line">      <span class="comment">// console.log(reg.test(&quot;1aaaf&quot;));</span></span><br><span class="line">      <span class="comment">// console.log(reg.test(&quot;2a2a2vvsdaaaf&quot;));</span></span><br><span class="line"></span><br><span class="line">       <span class="comment">// &#123;n&#125; 指定数字</span></span><br><span class="line">      <span class="comment">//  var reg = /\d&#123;3&#125;/</span></span><br><span class="line">      <span class="comment">// console.log(reg.test(&quot;1aaaf&quot;));</span></span><br><span class="line">      <span class="comment">// console.log(reg.test(&quot;2a342a2vvsdaaaf&quot;));</span></span><br><span class="line"></span><br><span class="line">       <span class="comment">// &#123;n，m&#125; 指定数字 大于等于n小于等于m</span></span><br><span class="line">       <span class="keyword">var</span> reg = <span class="regexp">/\d&#123;3,5&#125;/</span></span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&quot;1aaaf&quot;</span>));</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&quot;2a342a2vvsdaaaf&quot;</span>));</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&quot;1254567893jskl&quot;</span>));</span><br><span class="line">      <span class="comment">// console.log(reg.exec(&quot;1253jskl&quot;));</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 限定符只限定前一个</span></span><br><span class="line">      <span class="comment">// var reg = /c&#123;5&#125;/</span></span><br><span class="line">      <span class="comment">// console.log(reg.test(&quot;1aaaf&quot;)); 		 			//console.log(reg.test(&quot;2a342a2vvscccccccccccdaaaf&quot;));</span></span><br><span class="line">      <span class="comment">// console.log(reg.test(&quot;1254567893jskl&quot;));</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>2、案例分析</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>密码加强<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span>输入密码：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">       <span class="keyword">var</span> input = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;input&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">       <span class="keyword">var</span> reg = <span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="string">&quot;^1(86|3[4-9]|5[0-2])\\d&#123;8,&#125;?&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">       <span class="keyword">var</span> reg1 = <span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="string">&quot;^(\\w&#123;5,10&#125;)@\\w+(\.com|\.net|\.org)$&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">       <span class="variable language_">console</span>.<span class="title function_">log</span>(reg1);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">       <span class="variable language_">console</span>.<span class="title function_">log</span>(reg);</span></span><br><span class="line"><span class="language-javascript">       input.<span class="title function_">addEventListener</span>(<span class="string">&quot;input&quot;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">var</span> value = <span class="variable language_">this</span>.<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">           <span class="variable language_">console</span>.<span class="title function_">log</span>(reg1.<span class="title function_">test</span>(value));</span></span><br><span class="line"><span class="language-javascript">       &#125;)</span></span><br><span class="line"><span class="language-javascript">         <span class="comment">//验证规则：5-10个字符@1个或多个以上字符，以com、net、org结尾</span></span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="Promise的学习"><a href="#Promise的学习" class="headerlink" title="Promise的学习"></a>Promise的学习</h4><p>1、Promise的基本语法</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//Promise的基本语法</span></span><br><span class="line">       <span class="keyword">var</span> p = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>)=&gt;</span>&#123;</span><br><span class="line">           <span class="built_in">setTimeout</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">               <span class="title function_">resolve</span>()</span><br><span class="line">           &#125;,<span class="number">2000</span>)</span><br><span class="line">       &#125;)</span><br><span class="line">       p.<span class="title function_">then</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">           <span class="comment">//成功调用</span></span><br><span class="line">           <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;sucess&quot;</span>);</span><br><span class="line">       &#125;).<span class="title function_">catch</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">           <span class="comment">//失败调用</span></span><br><span class="line">           <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;fail&quot;</span>);</span><br><span class="line">       &#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>前端学习</category>
      </categories>
      <tags>
        <tag>前端 html css javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>前后端分离跨域解决</title>
    <url>/2023/06/08/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E8%B7%A8%E5%9F%9F%E8%A7%A3%E5%86%B3/</url>
    <content><![CDATA[<h1 id="前后端分离解决跨域问题"><a href="#前后端分离解决跨域问题" class="headerlink" title="前后端分离解决跨域问题"></a>前后端分离解决跨域问题</h1><h2 id="前端解决跨域"><a href="#前端解决跨域" class="headerlink" title="前端解决跨域"></a>前端解决跨域</h2><p>与<strong>src同级目录</strong>新建vue.config.js配置文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">const &#123; defineConfig &#125; = require(&#x27;@vue/cli-service&#x27;)</span><br><span class="line">module.exports = defineConfig(&#123;</span><br><span class="line">	</span><br><span class="line">  transpileDependencies: true,</span><br><span class="line">  // 语法检查 关闭</span><br><span class="line">  lintOnSave:false,</span><br><span class="line">  //代理访问解决前后端跨域问题</span><br><span class="line">  devServer:&#123;</span><br><span class="line">  //后端请求端口</span><br><span class="line">    proxy:&quot;http://localhost:8081&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="后端解决跨域问题"><a href="#后端解决跨域问题" class="headerlink" title="后端解决跨域问题"></a>后端解决跨域问题</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">添加@CrossOrigin注解在控制层</span><br></pre></td></tr></table></figure>
<p>springboot项目中配置一个封装类：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WebConfig</span> <span class="keyword">implements</span> <span class="title class_">WebMvcConfigurer</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addCorsMappings</span><span class="params">(CorsRegistry registry)</span> &#123;</span><br><span class="line">        registry.addMapping(<span class="string">&quot;/**&quot;</span>)</span><br><span class="line">                .allowedOrigins(<span class="string">&quot;http://localhost:8080&quot;</span>)</span><br><span class="line">                .allowedMethods(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;POST&quot;</span>, <span class="string">&quot;PUT&quot;</span>, <span class="string">&quot;DELETE&quot;</span>)</span><br><span class="line">                .allowedHeaders(<span class="string">&quot;*&quot;</span>)</span><br><span class="line">                .allowCredentials(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>前端 后端</category>
      </categories>
      <tags>
        <tag>后端 springboot 前端 vue</tag>
      </tags>
  </entry>
  <entry>
    <title>图形验证码</title>
    <url>/2022/12/30/%E5%9B%BE%E5%BD%A2%E9%AA%8C%E8%AF%81%E7%A0%81/</url>
    <content><![CDATA[<h1 id="java实现图片验证码"><a href="#java实现图片验证码" class="headerlink" title="java实现图片验证码"></a>java实现图片验证码</h1><h2 id="一、导入依赖"><a href="#一、导入依赖" class="headerlink" title="一、导入依赖"></a>一、导入依赖</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.axet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>kaptcha<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="二、配置类创建DefaultKaptcha"><a href="#二、配置类创建DefaultKaptcha" class="headerlink" title="二、配置类创建DefaultKaptcha"></a>二、配置类创建DefaultKaptcha</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.springboot.springbootvue.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.code.kaptcha.impl.DefaultKaptcha;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> com.google.code.kaptcha.util.Config;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> 张伟雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2022/12/30</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CaptchaConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> DefaultKaptcha <span class="title function_">defaultKaptcha</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//验证码生成器</span></span><br><span class="line">        DefaultKaptcha defaultKaptcha=<span class="keyword">new</span> <span class="title class_">DefaultKaptcha</span>();</span><br><span class="line">        <span class="comment">//配置</span></span><br><span class="line">        <span class="type">Properties</span> <span class="variable">properties</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">        <span class="comment">//是否有边框</span></span><br><span class="line">        properties.setProperty(<span class="string">&quot;kaptcha.border&quot;</span>, <span class="string">&quot;yes&quot;</span>);</span><br><span class="line">        <span class="comment">//设置边框颜色</span></span><br><span class="line">        properties.setProperty(<span class="string">&quot;kaptcha.border.color&quot;</span>, <span class="string">&quot;105,179,90&quot;</span>);</span><br><span class="line">        <span class="comment">//边框粗细度，默认为1</span></span><br><span class="line">        <span class="comment">// properties.setProperty(&quot;kaptcha.border.thickness&quot;,&quot;1&quot;);</span></span><br><span class="line">        <span class="comment">//验证码</span></span><br><span class="line">        properties.setProperty(<span class="string">&quot;kaptcha.session.key&quot;</span>,<span class="string">&quot;code&quot;</span>);</span><br><span class="line">        <span class="comment">//验证码文本字符颜色 默认为黑色</span></span><br><span class="line">        properties.setProperty(<span class="string">&quot;kaptcha.textproducer.font.color&quot;</span>, <span class="string">&quot;blue&quot;</span>);</span><br><span class="line">        <span class="comment">//设置字体样式</span></span><br><span class="line">        properties.setProperty(<span class="string">&quot;kaptcha.textproducer.font.names&quot;</span>, <span class="string">&quot;宋体,楷体,微软雅黑&quot;</span>);</span><br><span class="line">        <span class="comment">//字体大小，默认40</span></span><br><span class="line">        properties.setProperty(<span class="string">&quot;kaptcha.textproducer.font.size&quot;</span>, <span class="string">&quot;30&quot;</span>);</span><br><span class="line">        <span class="comment">//验证码文本字符内容范围 默认为abced2345678gfynmnpwx</span></span><br><span class="line">        <span class="comment">// properties.setProperty(&quot;kaptcha.textproducer.char.string&quot;, &quot;&quot;);</span></span><br><span class="line">        <span class="comment">//字符长度，默认为5</span></span><br><span class="line">        properties.setProperty(<span class="string">&quot;kaptcha.textproducer.char.length&quot;</span>, <span class="string">&quot;4&quot;</span>);</span><br><span class="line">        <span class="comment">//字符间距 默认为2</span></span><br><span class="line">        properties.setProperty(<span class="string">&quot;kaptcha.textproducer.char.space&quot;</span>, <span class="string">&quot;4&quot;</span>);</span><br><span class="line">        <span class="comment">//验证码图片宽度 默认为200</span></span><br><span class="line">        properties.setProperty(<span class="string">&quot;kaptcha.image.width&quot;</span>, <span class="string">&quot;100&quot;</span>);</span><br><span class="line">        <span class="comment">//验证码图片高度 默认为40</span></span><br><span class="line">        properties.setProperty(<span class="string">&quot;kaptcha.image.height&quot;</span>, <span class="string">&quot;40&quot;</span>);</span><br><span class="line">        <span class="type">Config</span> <span class="variable">config</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Config</span>(properties);</span><br><span class="line">        defaultKaptcha.setConfig(config);</span><br><span class="line">        <span class="keyword">return</span> defaultKaptcha;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="三、创建验证码接口"><a href="#三、创建验证码接口" class="headerlink" title="三、创建验证码接口"></a>三、创建验证码接口</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.springboot.springbootvue.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.code.kaptcha.impl.DefaultKaptcha;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiOperation;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"><span class="keyword">import</span> javax.imageio.ImageIO;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletOutputStream;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.awt.image.BufferedImage;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> 张伟雄</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2022/12/30</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CaptchaController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> DefaultKaptcha defaultKaptcha;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;验证码&quot;)</span></span><br><span class="line">    <span class="meta">@GetMapping(value = &quot;/captcha&quot;,produces = &quot;image/jpeg&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">captcha</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span>&#123;</span><br><span class="line">        <span class="comment">// 定义response输出类型为image/jpeg类型</span></span><br><span class="line">        response.setDateHeader(<span class="string">&quot;Expires&quot;</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="comment">// Set standard HTTP/1.1 no-cache headers.</span></span><br><span class="line">        response.setHeader(<span class="string">&quot;Cache-Control&quot;</span>, <span class="string">&quot;no-store, no-cache, must-revalidate&quot;</span>);</span><br><span class="line">        <span class="comment">// Set IE extended HTTP/1.1 no-cache headers (use addHeader).</span></span><br><span class="line">        response.addHeader(<span class="string">&quot;Cache-Control&quot;</span>, <span class="string">&quot;post-check=0, pre-check=0&quot;</span>);</span><br><span class="line">        <span class="comment">// Set standard HTTP/1.0 no-cache header.</span></span><br><span class="line">        response.setHeader(<span class="string">&quot;Pragma&quot;</span>, <span class="string">&quot;no-cache&quot;</span>);</span><br><span class="line">        <span class="comment">// return a jpeg</span></span><br><span class="line">        response.setContentType(<span class="string">&quot;image/jpeg&quot;</span>);</span><br><span class="line">        <span class="comment">//-------------------生成验证码 begin --------------------------</span></span><br><span class="line">        <span class="comment">//获取验证码文本内容</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">text</span> <span class="operator">=</span> defaultKaptcha.createText();</span><br><span class="line">        System.out.println(<span class="string">&quot;验证码内容：&quot;</span>+text);</span><br><span class="line">        <span class="comment">//将验证码文本内容放入session</span></span><br><span class="line">        request.getSession().setAttribute(<span class="string">&quot;captcha&quot;</span>,text);</span><br><span class="line">        <span class="comment">//根据文本验证码内容创建图形验证码</span></span><br><span class="line">        <span class="type">BufferedImage</span> <span class="variable">image</span> <span class="operator">=</span> defaultKaptcha.createImage(text);</span><br><span class="line">        <span class="type">ServletOutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            outputStream = response.getOutputStream();</span><br><span class="line">            <span class="comment">//输出流输出图片，格式为jpg</span></span><br><span class="line">            ImageIO.write(image,<span class="string">&quot;jpg&quot;</span>,outputStream);</span><br><span class="line">            outputStream.flush();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="literal">null</span>!=outputStream)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    outputStream.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//-------------------生成验证码 end --------------------------</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>后端学习</category>
      </categories>
      <tags>
        <tag>java后端 springboot</tag>
      </tags>
  </entry>
  <entry>
    <title>spring的学习和遇到的bug(一)</title>
    <url>/2023/06/01/spring/</url>
    <content><![CDATA[<h1 id="ssm框架整合中出现的问题"><a href="#ssm框架整合中出现的问题" class="headerlink" title="ssm框架整合中出现的问题"></a>ssm框架整合中出现的问题</h1><p><strong>在编译后target没有classes目录，导致java目录下的文件都没有被加载，导致你可以编译通过，但是运行过程中总是会报错。</strong></p>
<p>原因：在导入工程到idea的时候，上一个目录也有一个.idea导致配置文件加载错误。</p>
<p>例如：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">Could not resolve type alias &#x27;User&#x27;.  Cause: java.lang.ClassNotFoundException: </span><br></pre></td></tr></table></figure>
<p>解决方案:</p>
<pre><code>    1. 删除.idea配置文件，然后在退出idea，重新进入加载，就可以。
    1. 重新建一个新工程。
</code></pre><p>参考博客链接：<a href="https://blog.csdn.net/a2272062968/article/details/120404192">(174条消息) IDEA Web项目out/classes目录没有编译的class类文件 - IDEA环境下创建Maven WebApp_idea打war包没有class文件_WalkingWithTheWind～的博客-CSDN博客</a></p>
<p>+++</p>
]]></content>
      <categories>
        <category>后端学习</category>
      </categories>
      <tags>
        <tag>后端 ssm框架</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2022/11/26/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>hexo的butterfly主题的主题分页解决</title>
    <url>/2023/06/11/hexo%E7%9A%84butterfly%E4%B8%BB%E9%A2%98%E7%9A%84%E4%B8%BB%E9%A2%98%E5%88%86%E9%A1%B5%E8%A7%A3%E5%86%B3/</url>
    <content><![CDATA[<h1 id="butterfly主题的首页分页设置"><a href="#butterfly主题的首页分页设置" class="headerlink" title="butterfly主题的首页分页设置"></a>butterfly主题的首页分页设置</h1><p>在 Hexo 的配置文件 <code>_config.yml</code> 中，设置 <code>index_generator</code> 参数来启用首页分页，例如：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">index_generator:</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="number">5</span></span><br></pre></td></tr></table></figure>
<p>设置你需要的显示的个数。</p>
<p><a href="https://postimg.cc/dZjvKymF"><img src="https://i.postimg.cc/BbdvH5jj/Snipaste-2023-06-11-13-29-19.png" alt="Snipaste-2023-06-11-13-29-19.png"></a></p>
<p>然后在执行hexo c -&gt; hexo g -&gt; hexo s;</p>
<p>查看本地运行。</p>
<p>本地运行截图：</p>
<p><a href="https://postimg.cc/4nPV5FV8"><img src="https://i.postimg.cc/9F5bc6Mj/local.png" alt="local.png"></a></p>
<p>本地执行没问题，执行hexo d 上传就可以了。</p>
]]></content>
      <categories>
        <category>hexo框架</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>
